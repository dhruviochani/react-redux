{"ast":null,"code":"import { call, put, all } from \"redux-saga/effects\";\nimport API from \"./LoginApis\";\nimport * as ACTIONS from \"./LoginAction\";\nimport { dispatchSnackbarError } from \"../../utils/Shared\";\nimport { takeLatest } from \"redux-saga/effects\";\nimport * as TYPES from \"./LoginTypes\"; // Replace with your sagas\n\nexport function* LOGIN_DISPATCH_SAGA(payload) {\n  console.log('AuthSaga is here');\n  console.log('From authSaga ' + JSON.stringify(payload)); // localStorage.setItem('Prateek@123', true)\n\n  yield put({\n    type: TYPES.LOGIN_USER_SAGA_SUCCESS,\n    payload\n  });\n}\nexport function* sagasRequestExample() {\n  try {\n    const response = yield call(API.apiExampleRequest);\n    yield put(ACTIONS.actionReceive(response.data));\n    console.log('response is ' + response);\n  } catch (err) {\n    dispatchSnackbarError(err.response.data);\n  }\n}\nexport function* LoginSaga() {\n  // yield takeLatest(TYPES.GET_DATA_REQUEST, sagasRequestExample);\n  yield all([takeLatest(TYPES.GET_DATA_REQUEST, sagasRequestExample), takeLatest(TYPES.LOGIN_DISPATCH, LOGIN_DISPATCH_SAGA)]);\n}","map":{"version":3,"sources":["C:/Users/dines/react training/react-redux/src/store/Login/LoginSagas.js"],"names":["call","put","all","API","ACTIONS","dispatchSnackbarError","takeLatest","TYPES","LOGIN_DISPATCH_SAGA","payload","console","log","JSON","stringify","type","LOGIN_USER_SAGA_SUCCESS","sagasRequestExample","response","apiExampleRequest","actionReceive","data","err","LoginSaga","GET_DATA_REQUEST","LOGIN_DISPATCH"],"mappings":"AAAA,SAASA,IAAT,EAAeC,GAAf,EAAoBC,GAApB,QAA+B,oBAA/B;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAO,KAAKC,OAAZ,MAAyB,eAAzB;AACA,SAASC,qBAAT,QAAsC,oBAAtC;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,cAAvB,C,CAEA;;AAEA,OAAO,UAAUC,mBAAV,CAA8BC,OAA9B,EAAuC;AAC5CC,EAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAY,mBAAkBC,IAAI,CAACC,SAAL,CAAeJ,OAAf,CAA9B,EAF4C,CAI5C;;AACA,QAAMR,GAAG,CACR;AACGa,IAAAA,IAAI,EAAGP,KAAK,CAACQ,uBADhB;AACyCN,IAAAA;AADzC,GADQ,CAAT;AAID;AAED,OAAO,UAAUO,mBAAV,GAAgC;AACrC,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMjB,IAAI,CAACG,GAAG,CAACe,iBAAL,CAA3B;AACA,UAAMjB,GAAG,CAACG,OAAO,CAACe,aAAR,CAAsBF,QAAQ,CAACG,IAA/B,CAAD,CAAT;AACAV,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBM,QAA7B;AACD,GAJD,CAIE,OAAOI,GAAP,EAAY;AACZhB,IAAAA,qBAAqB,CAACgB,GAAG,CAACJ,QAAJ,CAAaG,IAAd,CAArB;AACD;AACF;AAGD,OAAO,UAAUE,SAAV,GAAsB;AAC3B;AACA,QAAMpB,GAAG,CAAC,CACRI,UAAU,CAACC,KAAK,CAACgB,gBAAP,EAAyBP,mBAAzB,CADF,EAERV,UAAU,CAACC,KAAK,CAACiB,cAAP,EAAuBhB,mBAAvB,CAFF,CAAD,CAAT;AAID","sourcesContent":["import { call, put, all } from \"redux-saga/effects\";\nimport API from \"./LoginApis\";\nimport * as ACTIONS from \"./LoginAction\";\nimport { dispatchSnackbarError } from \"../../utils/Shared\";\nimport { takeLatest } from \"redux-saga/effects\";\nimport * as TYPES from \"./LoginTypes\";\n\n// Replace with your sagas\n\nexport function* LOGIN_DISPATCH_SAGA(payload) {\n  console.log('AuthSaga is here')\n  console.log('From authSaga '+ JSON.stringify(payload))\n\n  // localStorage.setItem('Prateek@123', true)\n  yield put \n  ({\n      type : TYPES.LOGIN_USER_SAGA_SUCCESS, payload\n  })\n}\n\nexport function* sagasRequestExample() {\n  try {\n    const response = yield call(API.apiExampleRequest);\n    yield put(ACTIONS.actionReceive(response.data));\n    console.log('response is ' + response)\n  } catch (err) {\n    dispatchSnackbarError(err.response.data);\n  }\n}\n\n\nexport function* LoginSaga() {\n  // yield takeLatest(TYPES.GET_DATA_REQUEST, sagasRequestExample);\n  yield all([\n    takeLatest(TYPES.GET_DATA_REQUEST, sagasRequestExample),\n    takeLatest(TYPES.LOGIN_DISPATCH, LOGIN_DISPATCH_SAGA)\n  ]);\n}\n\n"]},"metadata":{},"sourceType":"module"}