{"ast":null,"code":"import store from \"../store\";\nimport { showSnackbarAction } from \"../store/Snackbar/SnackbarAction\";\nimport messages from \"../assets/Local/messages\"; // To show error message that returned from backend\n\nexport function dispatchSnackbarError(data) {\n  if (data) {\n    const errorMsg = data.error.message;\n    store.dispatch(showSnackbarAction(errorMsg, \"error\"));\n  }\n} // To show success message after any success request if needed and rendered from locale files\n\nexport function dispatchSnackbarSuccess(message) {\n  const lang = store.getState().lang;\n  store.dispatch(showSnackbarAction(messages[lang].snackbar[message], \"success\"));\n}","map":{"version":3,"sources":["C:/Users/91987/Desktop/Newput/needy_red/react-redux/src/utils/Shared.js"],"names":["store","showSnackbarAction","messages","dispatchSnackbarError","data","errorMsg","error","message","dispatch","dispatchSnackbarSuccess","lang","getState","snackbar"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,UAAlB;AACA,SAASC,kBAAT,QAAmC,kCAAnC;AACA,OAAOC,QAAP,MAAqB,0BAArB,C,CAEA;;AACA,OAAO,SAASC,qBAAT,CAA+BC,IAA/B,EAAqC;AAC1C,MAAIA,IAAJ,EAAU;AACR,UAAMC,QAAQ,GAAGD,IAAI,CAACE,KAAL,CAAWC,OAA5B;AACAP,IAAAA,KAAK,CAACQ,QAAN,CAAeP,kBAAkB,CAACI,QAAD,EAAW,OAAX,CAAjC;AACD;AACF,C,CACD;;AACA,OAAO,SAASI,uBAAT,CAAiCF,OAAjC,EAA0C;AAC/C,QAAMG,IAAI,GAAGV,KAAK,CAACW,QAAN,GAAiBD,IAA9B;AACAV,EAAAA,KAAK,CAACQ,QAAN,CACEP,kBAAkB,CAACC,QAAQ,CAACQ,IAAD,CAAR,CAAeE,QAAf,CAAwBL,OAAxB,CAAD,EAAmC,SAAnC,CADpB;AAGD","sourcesContent":["import store from \"../store\";\r\nimport { showSnackbarAction } from \"../store/Snackbar/SnackbarAction\";\r\nimport messages from \"../assets/Local/messages\";\r\n\r\n// To show error message that returned from backend\r\nexport function dispatchSnackbarError(data) {\r\n  if (data) {\r\n    const errorMsg = data.error.message;\r\n    store.dispatch(showSnackbarAction(errorMsg, \"error\"));\r\n  }\r\n}\r\n// To show success message after any success request if needed and rendered from locale files\r\nexport function dispatchSnackbarSuccess(message) {\r\n  const lang = store.getState().lang;\r\n  store.dispatch(\r\n    showSnackbarAction(messages[lang].snackbar[message], \"success\")\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}