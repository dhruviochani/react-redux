{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n\n    return extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\n\n\nimport * as React from 'react';\nimport { Context } from './injectIntl';\nimport { invariantIntlContext } from '../utils';\nimport { invariant } from '@formatjs/intl-utils';\nvar MINUTE = 60;\nvar HOUR = 60 * 60;\nvar DAY = 60 * 60 * 24;\n\nfunction selectUnit(seconds) {\n  var absValue = Math.abs(seconds);\n\n  if (absValue < MINUTE) {\n    return 'second';\n  }\n\n  if (absValue < HOUR) {\n    return 'minute';\n  }\n\n  if (absValue < DAY) {\n    return 'hour';\n  }\n\n  return 'day';\n}\n\nfunction getDurationInSeconds(unit) {\n  switch (unit) {\n    case 'second':\n      return 1;\n\n    case 'minute':\n      return MINUTE;\n\n    case 'hour':\n      return HOUR;\n\n    default:\n      return DAY;\n  }\n}\n\nfunction valueToSeconds(value, unit) {\n  if (!value) {\n    return 0;\n  }\n\n  switch (unit) {\n    case 'second':\n      return value;\n\n    case 'minute':\n      return value * MINUTE;\n\n    default:\n      return value * HOUR;\n  }\n}\n\nvar INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\n\nfunction canIncrement(unit) {\n  if (unit === void 0) {\n    unit = 'second';\n  }\n\n  return INCREMENTABLE_UNITS.includes(unit);\n}\n\nvar FormattedRelativeTime =\n/** @class */\nfunction (_super) {\n  __extends(FormattedRelativeTime, _super);\n\n  function FormattedRelativeTime(props) {\n    var _this = _super.call(this, props) || this; // Public for testing\n\n\n    _this._updateTimer = null;\n    _this.state = {\n      prevUnit: _this.props.unit,\n      prevValue: _this.props.value,\n      currentValueInSeconds: canIncrement(_this.props.unit) ? valueToSeconds(_this.props.value, _this.props.unit) : 0\n    };\n    invariant(!props.updateIntervalInSeconds || !!(props.updateIntervalInSeconds && canIncrement(props.unit)), 'Cannot schedule update with unit longer than hour');\n    return _this;\n  }\n\n  FormattedRelativeTime.prototype.scheduleNextUpdate = function (_a, _b) {\n    var _this = this;\n\n    var updateIntervalInSeconds = _a.updateIntervalInSeconds,\n        unit = _a.unit;\n    var currentValueInSeconds = _b.currentValueInSeconds;\n    clearTimeout(this._updateTimer);\n    this._updateTimer = null; // If there's no interval and we cannot increment this unit, do nothing\n\n    if (!updateIntervalInSeconds || !canIncrement(unit)) {\n      return;\n    } // Figure out the next interesting time\n\n\n    var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\n    var nextUnit = selectUnit(nextValueInSeconds); // We've reached the max auto incrementable unit, don't schedule another update\n\n    if (nextUnit === 'day') {\n      return;\n    }\n\n    var unitDuration = getDurationInSeconds(nextUnit);\n    var remainder = nextValueInSeconds % unitDuration;\n    var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\n    var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds ? prevInterestingValueInSeconds - unitDuration : prevInterestingValueInSeconds;\n    var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\n    this._updateTimer = setTimeout(function () {\n      return _this.setState({\n        currentValueInSeconds: nextInterestingValueInSeconds\n      });\n    }, delayInSeconds * 1e3);\n  };\n\n  FormattedRelativeTime.prototype.componentDidMount = function () {\n    this.scheduleNextUpdate(this.props, this.state);\n  };\n\n  FormattedRelativeTime.prototype.componentDidUpdate = function () {\n    this.scheduleNextUpdate(this.props, this.state);\n  };\n\n  FormattedRelativeTime.prototype.componentWillUnmount = function () {\n    clearTimeout(this._updateTimer);\n    this._updateTimer = null;\n  };\n\n  FormattedRelativeTime.getDerivedStateFromProps = function (props, state) {\n    if (props.unit !== state.prevUnit || props.value !== state.prevValue) {\n      return {\n        prevValue: props.value,\n        prevUnit: props.unit,\n        currentValueInSeconds: canIncrement(props.unit) ? valueToSeconds(props.value, props.unit) : 0\n      };\n    }\n\n    return null;\n  };\n\n  FormattedRelativeTime.prototype.render = function () {\n    var _this = this;\n\n    return React.createElement(Context.Consumer, null, function (intl) {\n      invariantIntlContext(intl);\n      var formatRelativeTime = intl.formatRelativeTime,\n          Text = intl.textComponent;\n      var _a = _this.props,\n          children = _a.children,\n          value = _a.value,\n          unit = _a.unit,\n          updateIntervalInSeconds = _a.updateIntervalInSeconds;\n      var currentValueInSeconds = _this.state.currentValueInSeconds;\n      var currentValue = value || 0;\n      var currentUnit = unit;\n\n      if (canIncrement(unit) && typeof currentValueInSeconds === 'number' && updateIntervalInSeconds) {\n        currentUnit = selectUnit(currentValueInSeconds);\n        var unitDuration = getDurationInSeconds(currentUnit);\n        currentValue = Math.round(currentValueInSeconds / unitDuration);\n      }\n\n      var formattedRelativeTime = formatRelativeTime(currentValue, currentUnit, __assign({}, _this.props));\n\n      if (typeof children === 'function') {\n        return children(formattedRelativeTime);\n      }\n\n      if (Text) {\n        return React.createElement(Text, null, formattedRelativeTime);\n      }\n\n      return formattedRelativeTime;\n    });\n  };\n\n  FormattedRelativeTime.displayName = 'FormattedRelativeTime';\n  FormattedRelativeTime.defaultProps = {\n    value: 0,\n    unit: 'second'\n  };\n  return FormattedRelativeTime;\n}(React.PureComponent);\n\nexport { FormattedRelativeTime };\nexport default FormattedRelativeTime;","map":{"version":3,"sources":["../../src/components/relative.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["var __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __assign = (this && this.__assign) || function () {\r\n    __assign = Object.assign || function(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n                t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n/*\r\n * Copyright 2015, Yahoo Inc.\r\n * Copyrights licensed under the New BSD License.\r\n * See the accompanying LICENSE file for terms.\r\n */\r\nimport * as React from 'react';\r\nimport { Context } from './injectIntl';\r\nimport { invariantIntlContext } from '../utils';\r\nimport { invariant } from '@formatjs/intl-utils';\r\nvar MINUTE = 60;\r\nvar HOUR = 60 * 60;\r\nvar DAY = 60 * 60 * 24;\r\nfunction selectUnit(seconds) {\r\n    var absValue = Math.abs(seconds);\r\n    if (absValue < MINUTE) {\r\n        return 'second';\r\n    }\r\n    if (absValue < HOUR) {\r\n        return 'minute';\r\n    }\r\n    if (absValue < DAY) {\r\n        return 'hour';\r\n    }\r\n    return 'day';\r\n}\r\nfunction getDurationInSeconds(unit) {\r\n    switch (unit) {\r\n        case 'second':\r\n            return 1;\r\n        case 'minute':\r\n            return MINUTE;\r\n        case 'hour':\r\n            return HOUR;\r\n        default:\r\n            return DAY;\r\n    }\r\n}\r\nfunction valueToSeconds(value, unit) {\r\n    if (!value) {\r\n        return 0;\r\n    }\r\n    switch (unit) {\r\n        case 'second':\r\n            return value;\r\n        case 'minute':\r\n            return value * MINUTE;\r\n        default:\r\n            return value * HOUR;\r\n    }\r\n}\r\nvar INCREMENTABLE_UNITS = ['second', 'minute', 'hour'];\r\nfunction canIncrement(unit) {\r\n    if (unit === void 0) { unit = 'second'; }\r\n    return INCREMENTABLE_UNITS.includes(unit);\r\n}\r\nvar FormattedRelativeTime = /** @class */ (function (_super) {\r\n    __extends(FormattedRelativeTime, _super);\r\n    function FormattedRelativeTime(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        // Public for testing\r\n        _this._updateTimer = null;\r\n        _this.state = {\r\n            prevUnit: _this.props.unit,\r\n            prevValue: _this.props.value,\r\n            currentValueInSeconds: canIncrement(_this.props.unit)\r\n                ? valueToSeconds(_this.props.value, _this.props.unit)\r\n                : 0,\r\n        };\r\n        invariant(!props.updateIntervalInSeconds ||\r\n            !!(props.updateIntervalInSeconds && canIncrement(props.unit)), 'Cannot schedule update with unit longer than hour');\r\n        return _this;\r\n    }\r\n    FormattedRelativeTime.prototype.scheduleNextUpdate = function (_a, _b) {\r\n        var _this = this;\r\n        var updateIntervalInSeconds = _a.updateIntervalInSeconds, unit = _a.unit;\r\n        var currentValueInSeconds = _b.currentValueInSeconds;\r\n        clearTimeout(this._updateTimer);\r\n        this._updateTimer = null;\r\n        // If there's no interval and we cannot increment this unit, do nothing\r\n        if (!updateIntervalInSeconds || !canIncrement(unit)) {\r\n            return;\r\n        }\r\n        // Figure out the next interesting time\r\n        var nextValueInSeconds = currentValueInSeconds - updateIntervalInSeconds;\r\n        var nextUnit = selectUnit(nextValueInSeconds);\r\n        // We've reached the max auto incrementable unit, don't schedule another update\r\n        if (nextUnit === 'day') {\r\n            return;\r\n        }\r\n        var unitDuration = getDurationInSeconds(nextUnit);\r\n        var remainder = nextValueInSeconds % unitDuration;\r\n        var prevInterestingValueInSeconds = nextValueInSeconds - remainder;\r\n        var nextInterestingValueInSeconds = prevInterestingValueInSeconds >= currentValueInSeconds\r\n            ? prevInterestingValueInSeconds - unitDuration\r\n            : prevInterestingValueInSeconds;\r\n        var delayInSeconds = Math.abs(nextInterestingValueInSeconds - currentValueInSeconds);\r\n        this._updateTimer = setTimeout(function () {\r\n            return _this.setState({\r\n                currentValueInSeconds: nextInterestingValueInSeconds,\r\n            });\r\n        }, delayInSeconds * 1e3);\r\n    };\r\n    FormattedRelativeTime.prototype.componentDidMount = function () {\r\n        this.scheduleNextUpdate(this.props, this.state);\r\n    };\r\n    FormattedRelativeTime.prototype.componentDidUpdate = function () {\r\n        this.scheduleNextUpdate(this.props, this.state);\r\n    };\r\n    FormattedRelativeTime.prototype.componentWillUnmount = function () {\r\n        clearTimeout(this._updateTimer);\r\n        this._updateTimer = null;\r\n    };\r\n    FormattedRelativeTime.getDerivedStateFromProps = function (props, state) {\r\n        if (props.unit !== state.prevUnit || props.value !== state.prevValue) {\r\n            return {\r\n                prevValue: props.value,\r\n                prevUnit: props.unit,\r\n                currentValueInSeconds: canIncrement(props.unit)\r\n                    ? valueToSeconds(props.value, props.unit)\r\n                    : 0,\r\n            };\r\n        }\r\n        return null;\r\n    };\r\n    FormattedRelativeTime.prototype.render = function () {\r\n        var _this = this;\r\n        return (React.createElement(Context.Consumer, null, function (intl) {\r\n            invariantIntlContext(intl);\r\n            var formatRelativeTime = intl.formatRelativeTime, Text = intl.textComponent;\r\n            var _a = _this.props, children = _a.children, value = _a.value, unit = _a.unit, updateIntervalInSeconds = _a.updateIntervalInSeconds;\r\n            var currentValueInSeconds = _this.state.currentValueInSeconds;\r\n            var currentValue = value || 0;\r\n            var currentUnit = unit;\r\n            if (canIncrement(unit) &&\r\n                typeof currentValueInSeconds === 'number' &&\r\n                updateIntervalInSeconds) {\r\n                currentUnit = selectUnit(currentValueInSeconds);\r\n                var unitDuration = getDurationInSeconds(currentUnit);\r\n                currentValue = Math.round(currentValueInSeconds / unitDuration);\r\n            }\r\n            var formattedRelativeTime = formatRelativeTime(currentValue, currentUnit, __assign({}, _this.props));\r\n            if (typeof children === 'function') {\r\n                return children(formattedRelativeTime);\r\n            }\r\n            if (Text) {\r\n                return React.createElement(Text, null, formattedRelativeTime);\r\n            }\r\n            return formattedRelativeTime;\r\n        }));\r\n    };\r\n    FormattedRelativeTime.displayName = 'FormattedRelativeTime';\r\n    FormattedRelativeTime.defaultProps = {\r\n        value: 0,\r\n        unit: 'second',\r\n    };\r\n    return FormattedRelativeTime;\r\n}(React.PureComponent));\r\nexport { FormattedRelativeTime };\r\nexport default FormattedRelativeTime;\r\n//# sourceMappingURL=relative.js.map"]},"metadata":{},"sourceType":"module"}