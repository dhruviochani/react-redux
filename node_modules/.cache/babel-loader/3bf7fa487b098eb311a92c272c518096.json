{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91987\\\\Desktop\\\\Newput\\\\needy_red\\\\react-redux\\\\src\\\\containers\\\\Login\\\\Login.js\";\nimport React from 'react';\nimport { Btn } from '../../components/Controls/Button/Button';\nimport History from '../../routes/History';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport '../../css/Login.css';\nimport { connect } from 'react-redux';\nimport { fetchData } from '../../network/apis';\nimport { LOGIN_DISPATCH_FUNCTION } from '../../store/Login/LoginAction';\n\nclass Login extends React.Component {\n  // this method is only to trigger route guards , remove and use your own logic\n  // handleLogin = () => {\n  //     localStorage.setItem('token','token');\n  //     History.push('/')\n  // }\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"text-center my-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      className: \"header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }\n    }, \"Admin Login\"), /*#__PURE__*/React.createElement(Formik, {\n      initialValues: {\n        email: '',\n        password: ''\n      },\n      validationSchema: Yup.object({\n        email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\n        password: Yup.string().required(\"Required\") // .matches(\n        //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\n        //   \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\n        // )\n        // .min(8).max(16)\n\n      }),\n      onSubmit: (values, {\n        setSubmitting\n      }) => {\n        setTimeout(async () => {\n          setSubmitting(false);\n          const token = await fetchData(values);\n          this.props.LOGIN_DISPATCH();\n          localStorage.setItem('token', token);\n          console.log(values);\n          History.push('/needy');\n        }, 400);\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"loginForm mx-auto col-lg-6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Form, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2 mb-sm-3 mb-lg-4 col-sm-12 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"email\",\n      className: \"form-control red\",\n      placeholder: \"Enter Email Id\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errormessage\",\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"email\",\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 23\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-2 mb-sm-3 mb-lg-4 col-sm-12 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(Field, {\n      name: \"password\",\n      type: \"password\",\n      className: \"form-control red\",\n      placeholder: \"Enter Password\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"errormessage\",\n      style: {\n        color: \"red\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(ErrorMessage, {\n      name: \"password\",\n      className: \"error\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 23\n      }\n    }))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mb-sm-3 mb-lg-4 col-sm-12 col-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"btn btn-primary btn-login text-light\",\n      type: \"submit\",\n      id: \"button\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 19\n      }\n    }, \"Login\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"bg-curve\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    login: state.login\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  LOGIN_DISPATCH: payload => {\n    dispatch(LOGIN_DISPATCH_FUNCTION(payload));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);","map":{"version":3,"sources":["C:/Users/91987/Desktop/Newput/needy_red/react-redux/src/containers/Login/Login.js"],"names":["React","Btn","History","Formik","Form","Field","ErrorMessage","Yup","connect","fetchData","LOGIN_DISPATCH_FUNCTION","Login","Component","render","email","password","object","string","required","values","setSubmitting","setTimeout","token","props","LOGIN_DISPATCH","localStorage","setItem","console","log","push","color","mapStateToProps","state","login","mapDispatchToProps","dispatch","payload"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Btn } from '../../components/Controls/Button/Button';\r\nimport History from '../../routes/History';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport * as Yup from 'yup';\r\nimport '../../css/Login.css'\r\nimport {connect} from 'react-redux'\r\nimport { fetchData } from '../../network/apis';\r\nimport { LOGIN_DISPATCH_FUNCTION } from '../../store/Login/LoginAction';\r\n\r\nclass Login extends React.Component {\r\n\r\n  // this method is only to trigger route guards , remove and use your own logic\r\n  // handleLogin = () => {\r\n  //     localStorage.setItem('token','token');\r\n  //     History.push('/')\r\n  // }\r\n\r\n  render() {\r\n    return (\r\n      <div className='text-center my-5'>\r\n        <h1 className='header'>Admin Login</h1>\r\n        <Formik\r\n          initialValues={{ email: '', password: '' }}\r\n          validationSchema={\r\n            Yup.object({\r\n              email: Yup.string().email(\"Invalid email address\").required(\"Required\"),\r\n              password: Yup.string()\r\n                .required(\"Required\")\r\n                // .matches(\r\n                //   /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(?=.*[!@#$%^&*])(?=.{8,})/,\r\n                //   \"Must Contain 8 Characters, One Uppercase, One Lowercase, One Number and one special case Character\"\r\n                // )\r\n                // .min(8).max(16)\r\n\r\n            })\r\n          }\r\n          onSubmit={(values, { setSubmitting }) => {\r\n            setTimeout(async () => {\r\n              setSubmitting(false);\r\n              const token = await fetchData(values);\r\n              this.props.LOGIN_DISPATCH()             \r\n              localStorage.setItem('token', token);\r\n              console.log(values)\r\n              History.push('/needy')\r\n            }, 400);\r\n          }}\r\n        >\r\n          <div className='loginForm mx-auto col-lg-6'>\r\n            <Form>\r\n              <div className='row'>\r\n                <div className='mb-2 mb-sm-3 mb-lg-4 col-sm-12 col-12'>\r\n                  <div className='form-group mt-2'>\r\n                    <Field name=\"email\" className=\"form-control red\" placeholder=\"Enter Email Id\"></Field>\r\n                    <div className='errormessage' style={{ color: \"red\" }} >\r\n                      <ErrorMessage name=\"email\" className='error' /></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className='row'>\r\n                <div className='mb-2 mb-sm-3 mb-lg-4 col-sm-12 col-12'>\r\n                  <div className='form-group mt-2'>\r\n                    <Field name=\"password\" type=\"password\" className=\"form-control red\" placeholder=\"Enter Password\"></Field>\r\n                    <div className='errormessage' style={{ color: \"red\" }} >\r\n                      <ErrorMessage name=\"password\" className='error' /></div>\r\n                  </div>\r\n                  {/* {response ? <></> : <div className='errormessage' style={{ color: \"red\" }} >\r\n                    <ErrorMessage className='error'>Wrong</ErrorMessage>\r\n                  </div> }   */}\r\n                </div>\r\n              </div>\r\n              <div className='row'>\r\n                <div className='mb-sm-3 mb-lg-4 col-sm-12 col-12'>\r\n                  <button className=\"btn btn-primary btn-login text-light\" type='submit' id='button'>Login</button>\r\n                </div>\r\n              </div>\r\n            </Form>\r\n          </div>\r\n        </Formik>\r\n        <div className='bg-curve'/>\r\n        {/* <Btn text='Login' handleClick={this.handleLogin}/> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n      login : state.login\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  LOGIN_DISPATCH : payload => \r\n  {\r\n    dispatch(LOGIN_DISPATCH_FUNCTION(payload));\r\n  }\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Login);"]},"metadata":{},"sourceType":"module"}