{"ast":null,"code":"import store from \"../../store\";\nimport { loader } from \"../../store/Loader/LoaderAction\";\nimport Auth from \"../../utils/Auth\";\nexport const isHandlerEnabled = (config = {}) => {\n  return config.hasOwnProperty(\"handlerEnabled\") && !config.handlerEnabled ? false : true;\n};\nexport const requestHandler = request => {\n  if (isHandlerEnabled(request)) {\n    // Modify request here\n    store.dispatch(loader(true));\n  }\n\n  return request;\n};\nexport const successHandler = response => {\n  if (isHandlerEnabled(response)) {\n    // Hanlde Response\n    store.dispatch(loader(false));\n    console.log(response);\n  }\n\n  console.log(response);\n  return response;\n};\nexport const errorHandler = error => {\n  if (isHandlerEnabled(error.config)) {\n    store.dispatch(loader(false)); // You can decide what you need to do to handle errors.\n    // here's example for unautherized user to log them out .\n    // error.response.status === 401 && Auth.signOut();\n  }\n\n  return Promise.reject({ ...error\n  });\n};","map":{"version":3,"sources":["C:/Users/91987/Desktop/Newput/needy/react-redux/src/network/interceptors/index.js"],"names":["store","loader","Auth","isHandlerEnabled","config","hasOwnProperty","handlerEnabled","requestHandler","request","dispatch","successHandler","response","console","log","errorHandler","error","Promise","reject"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,SAASC,MAAT,QAAuB,iCAAvB;AACA,OAAOC,IAAP,MAAiB,kBAAjB;AAEA,OAAO,MAAMC,gBAAgB,GAAG,CAACC,MAAM,GAAG,EAAV,KAAiB;AAC/C,SAAOA,MAAM,CAACC,cAAP,CAAsB,gBAAtB,KAA2C,CAACD,MAAM,CAACE,cAAnD,GACH,KADG,GAEH,IAFJ;AAGD,CAJM;AAMP,OAAO,MAAMC,cAAc,GAAGC,OAAO,IAAI;AACvC,MAAIL,gBAAgB,CAACK,OAAD,CAApB,EAA+B;AAC9B;AACCR,IAAAA,KAAK,CAACS,QAAN,CAAeR,MAAM,CAAC,IAAD,CAArB;AACD;;AACD,SAAOO,OAAP;AACD,CANM;AAQP,OAAO,MAAME,cAAc,GAAGC,QAAQ,IAAI;AACxC,MAAIR,gBAAgB,CAACQ,QAAD,CAApB,EAAgC;AAC9B;AACAX,IAAAA,KAAK,CAACS,QAAN,CAAeR,MAAM,CAAC,KAAD,CAArB;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACD;;AACDC,EAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,SAAOA,QAAP;AACD,CARM;AAUP,OAAO,MAAMG,YAAY,GAAGC,KAAK,IAAI;AACnC,MAAIZ,gBAAgB,CAACY,KAAK,CAACX,MAAP,CAApB,EAAoC;AAClCJ,IAAAA,KAAK,CAACS,QAAN,CAAeR,MAAM,CAAC,KAAD,CAArB,EADkC,CAElC;AACA;AACA;AACD;;AACD,SAAOe,OAAO,CAACC,MAAR,CAAe,EAAE,GAAGF;AAAL,GAAf,CAAP;AACD,CARM","sourcesContent":["import store from \"../../store\";\r\nimport { loader } from \"../../store/Loader/LoaderAction\";\r\nimport Auth from \"../../utils/Auth\";\r\n\r\nexport const isHandlerEnabled = (config = {}) => {\r\n  return config.hasOwnProperty(\"handlerEnabled\") && !config.handlerEnabled\r\n    ? false\r\n    : true;\r\n};\r\n\r\nexport const requestHandler = request => {\r\n  if (isHandlerEnabled(request)) {\r\n   // Modify request here\r\n    store.dispatch(loader(true));\r\n  }\r\n  return request;\r\n};\r\n\r\nexport const successHandler = response => {\r\n  if (isHandlerEnabled(response)) {\r\n    // Hanlde Response\r\n    store.dispatch(loader(false));\r\n    console.log(response)\r\n  }\r\n  console.log(response)\r\n  return response;\r\n};\r\n\r\nexport const errorHandler = error => {\r\n  if (isHandlerEnabled(error.config)) {\r\n    store.dispatch(loader(false));\r\n    // You can decide what you need to do to handle errors.\r\n    // here's example for unautherized user to log them out .\r\n    // error.response.status === 401 && Auth.signOut();\r\n  }\r\n  return Promise.reject({ ...error });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}