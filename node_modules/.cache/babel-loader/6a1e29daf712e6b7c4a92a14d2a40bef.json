{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91987\\\\Desktop\\\\Newput\\\\needy_red\\\\react-redux\\\\src\\\\containers\\\\App.js\";\nimport React from \"react\";\nimport { Router } from \"react-router-dom\";\nimport history from \"../routes/History\";\nimport Routes from \"../routes/Routes\";\nimport { IntlProvider } from \"react-intl\";\nimport messages from \"../assets/Local/messages\";\nimport { MaterialSnackbar } from \"../components/Snackbar/Snackbar\";\nimport Loader from \"../components/Loader/Loader\";\nimport \"./App.scss\";\nimport { connect } from \"react-redux\";\nimport { setCurrentLang } from \"../store/Lang/LangAction\";\n\nclass App extends React.Component {\n  // App contains routes and also wrapped with snackbar and intl for localization\n  render() {\n    const {\n      loading\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, loading ? /*#__PURE__*/React.createElement(Loader, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 22\n      }\n    }) : null, /*#__PURE__*/React.createElement(Router, {\n      history: history,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MaterialSnackbar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Routes, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 14\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = ({\n  loading,\n  login,\n  needy\n}) => ({\n  lang,\n  loading,\n  login,\n  needy\n});\n\nexport default connect(mapStateToProps, {\n  setCurrentLang\n})(App);","map":{"version":3,"sources":["C:/Users/91987/Desktop/Newput/needy_red/react-redux/src/containers/App.js"],"names":["React","Router","history","Routes","IntlProvider","messages","MaterialSnackbar","Loader","connect","setCurrentLang","App","Component","render","loading","props","mapStateToProps","login","needy","lang"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,QAAuB,kBAAvB;AACA,OAAOC,OAAP,MAAoB,mBAApB;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,SAASC,gBAAT,QAAiC,iCAAjC;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,OAAO,YAAP;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,0BAA/B;;AAEA,MAAMC,GAAN,SAAkBV,KAAK,CAACW,SAAxB,CAAkC;AAChC;AAEAC,EAAAA,MAAM,GAAG;AACP,UAAM;AAACC,MAAAA;AAAD,QAAa,KAAKC,KAAxB;AACA,wBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,OAAO,gBAAG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAH,GAAgB,IAD1B,eAEE,oBAAC,MAAD;AAAQ,MAAA,OAAO,EAAEX,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEG,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFH,CAFF,CADJ;AASD;;AAd+B;;AAiBlC,MAAMa,eAAe,GAAG,CAAC;AAAEF,EAAAA,OAAF;AAAWG,EAAAA,KAAX;AAAkBC,EAAAA;AAAlB,CAAD,MAAgC;AACtDC,EAAAA,IADsD;AAEtDL,EAAAA,OAFsD;AAGtDG,EAAAA,KAHsD;AAItDC,EAAAA;AAJsD,CAAhC,CAAxB;;AAOA,eAAeT,OAAO,CAACO,eAAD,EAAkB;AAAEN,EAAAA;AAAF,CAAlB,CAAP,CAA6CC,GAA7C,CAAf","sourcesContent":["import React from \"react\";\r\nimport { Router } from \"react-router-dom\";\r\nimport history from \"../routes/History\";\r\nimport Routes from \"../routes/Routes\";\r\nimport { IntlProvider } from \"react-intl\";\r\nimport messages from \"../assets/Local/messages\";\r\nimport { MaterialSnackbar } from \"../components/Snackbar/Snackbar\";\r\nimport Loader from \"../components/Loader/Loader\";\r\nimport \"./App.scss\";\r\nimport { connect } from \"react-redux\";\r\nimport { setCurrentLang } from \"../store/Lang/LangAction\";\r\n\r\nclass App extends React.Component {\r\n  // App contains routes and also wrapped with snackbar and intl for localization\r\n\r\n  render() {\r\n    const {loading } = this.props;\r\n    return (\r\n        <div>\r\n          {loading ? <Loader /> : null}\r\n          <Router history={history}>\r\n            <MaterialSnackbar />\r\n            {<Routes/>}\r\n          </Router>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = ({ loading, login, needy }) => ({\r\n  lang,\r\n  loading,\r\n  login,\r\n  needy\r\n});\r\n\r\nexport default connect(mapStateToProps, { setCurrentLang })(App);\r\n"]},"metadata":{},"sourceType":"module"}