{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91987\\\\Desktop\\\\Newput\\\\needy_red\\\\react-redux\\\\src\\\\containers\\\\dashboard\\\\dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport '../../css/Dashboard.css';\nimport _ from 'lodash';\nimport { isDisabled } from '@testing-library/user-event/dist/utils';\nimport Auth from '../../utils/Auth';\nimport { fetchdata } from '../../network/apis';\nimport { loadUsersStart, loadUsersError, loadUsersSuccess } from '../../store/Dashboard/DashboardAction';\nimport { connect } from 'react-redux';\nimport { CodeOutlined } from '@material-ui/icons';\n\nconst Dashboard = () => {\n  const [myData, setMyData] = useState([]);\n  const [paginatedData, setPaginatedData] = useState([]);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [maxContent, setMaxContent] = useState(4);\n  const totalPages = Math.ceil(myData.length / maxContent);\n  const [count, setCount] = useState(2);\n  useEffect(() => {\n    const t = fetchdata();\n    setMyData(t);\n    setPaginatedData(_(t).slice(0).take(maxContent).value());\n    this.props.loadUsersStart();\n    console.log(myData);\n  }, []);\n\n  const pagination = pageNo => {\n    setCurrentPage(pageNo);\n    const startIndex = (pageNo - 1) * maxContent;\n\n    const paginatedSinglePageData = _(myData).slice(startIndex).take(maxContent).value();\n\n    setPaginatedData(paginatedSinglePageData);\n  };\n\n  const lastPage = () => {\n    pagination(totalPages);\n  };\n\n  const nextPage = () => {\n    pagination(currentPage + 1);\n  };\n\n  const firstPage = () => {\n    pagination(1);\n  };\n\n  const previousPage = () => {\n    console.log(currentPage);\n    pagination(currentPage - 1);\n  };\n\n  const handleLogout = () => {\n    localStorage.clear();\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  });\n};\n\nconst mapStateToProps = state => ({\n  data: state.data\n});\n\nconst mapDispatchToProps = dispatch => ({\n  LOAD_USERS_START: payload => {\n    dispatch(loadUsersStart(payload));\n  }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["C:/Users/91987/Desktop/Newput/needy_red/react-redux/src/containers/dashboard/dashboard.js"],"names":["React","useState","useEffect","Link","_","isDisabled","Auth","fetchdata","loadUsersStart","loadUsersError","loadUsersSuccess","connect","CodeOutlined","Dashboard","myData","setMyData","paginatedData","setPaginatedData","currentPage","setCurrentPage","maxContent","setMaxContent","totalPages","Math","ceil","length","count","setCount","t","slice","take","value","props","console","log","pagination","pageNo","startIndex","paginatedSinglePageData","lastPage","nextPage","firstPage","previousPage","handleLogout","localStorage","clear","mapStateToProps","state","data","mapDispatchToProps","dispatch","LOAD_USERS_START","payload"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../../css/Dashboard.css';\r\nimport _ from 'lodash';\r\nimport { isDisabled } from '@testing-library/user-event/dist/utils';\r\nimport Auth from '../../utils/Auth';\r\nimport { fetchdata } from '../../network/apis';\r\nimport { loadUsersStart,loadUsersError, loadUsersSuccess } from '../../store/Dashboard/DashboardAction';\r\nimport { connect } from 'react-redux' ;\r\nimport { CodeOutlined } from '@material-ui/icons';\r\n\r\nconst Dashboard = () => {\r\n    const [myData, setMyData] = useState([]);\r\n    const [paginatedData, setPaginatedData] = useState([]);\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n    const [maxContent, setMaxContent] = useState(4)\r\n    const totalPages = Math.ceil(myData.length / maxContent);\r\n    const [count, setCount] = useState(2);\r\n    \r\n    useEffect(()=>{\r\n        const t= fetchdata();\r\n        setMyData(t);\r\n        setPaginatedData(_(t).slice(0).take(maxContent).value())\r\n        this.props.loadUsersStart()\r\n        console.log(myData);\r\n    },[])\r\n\r\n    const pagination = (pageNo) => {\r\n        setCurrentPage(pageNo);\r\n        const startIndex = (pageNo - 1) * maxContent;\r\n        const paginatedSinglePageData = _(myData).slice(startIndex).take(maxContent).value();\r\n        setPaginatedData(paginatedSinglePageData);\r\n      }\r\n    \r\n      const lastPage = () => {\r\n        pagination(totalPages);\r\n    \r\n      }\r\n    \r\n      const nextPage = () => {\r\n        pagination(currentPage + 1)\r\n      }\r\n    \r\n      const firstPage = () => {\r\n        pagination(1)\r\n      }\r\n    \r\n      const previousPage = () => {\r\n        console.log(currentPage);\r\n        pagination(currentPage - 1)\r\n      }\r\n    \r\n      const handleLogout = () => {\r\n        localStorage.clear()\r\n      }\r\n\r\n    return(\r\n        <div className='dashboard'>\r\n            \r\n        </div>\r\n    )\r\n    }\r\n    const mapStateToProps = (state) => ({\r\n        data: state.data,\r\n      });\r\n    const mapDispatchToProps = (dispatch) => ({\r\n        LOAD_USERS_START : payload => \r\n        {\r\n          dispatch(loadUsersStart(payload));\r\n        }\r\n      });\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);"]},"metadata":{},"sourceType":"module"}